version: "4"
services:

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: my_secret_password
      MYSQL_DATABASE: database
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
#    volumes:
#      - dbdata:/var/lib/mysq

  discovery:
    image: discovery
    container_name: discovery
    build:
      context: ./../chrisblog-microservices_discovery
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - 8761:8761
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  tempo:
    image: grafana/tempo:2.2.2
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./../docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./../docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "3110:3100"  # Tempo
      - "9411:9411" # zipkin

  loki:
    image: grafana/loki:3.3.2
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:v2.46.0
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./../docker/prometheus/prometheus-container.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.1.0
    volumes:
      - ./../docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"

  be:
    image: be:0.0.1
    container_name: be
    build:
      context: ./../chrisblog-microservices_be
      dockerfile: Dockerfile
    depends_on:
      - discovery
    environment:
      spring.datasource.url: jdbc:mysql://mysql:3306/database
      eureka.client.service-url.defaultZone: http://discovery:8761/eureka
      management.zipkin.tracing.endpoint: http://tempo:9411/api/v2/spans
      LOKI_URL: http://loki:3100
    ports:
      - 8081:8081
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  fe:
    image: fe:0.0.1
    container_name: fe
    build:
      context: ./../chrisblog-microservices_fe
      dockerfile: Dockerfile
    depends_on:
      - discovery
    environment:
      api.url: http://be:8081
      eureka.client.service-url.defaultZone: http://discovery:8761/eureka
      management.zipkin.tracing.endpoint: http://tempo:9411/api/v2/spans
      LOKI_URL: http://loki:3100
    ports:
      - 8080:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  gateway:
    image: gateway:0.0.1
    container_name: gateway
    build:
      context: ./../chrisblog-microservices_gateway
      dockerfile: Dockerfile
    environment:
      fe.service.url: http://fe:8080
      eureka.client.service-url.defaultZone: http://discovery:8761/eureka
      management.zipkin.tracing.endpoint: http://tempo:9411/api/v2/spans
      LOKI_URL: http://loki:3100
    depends_on:
      - discovery
    ports:
      - 8762:8762
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8762/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s